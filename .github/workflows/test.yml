name: Test

on:
  pull_request:
    branches:
      - main

env:
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  NODE_VERSION: 18

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Unit Test
        run: npm run unit-test

      - name: Lint
        run: npm run lint

  build-and-test-docker:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup saucectl
        uses: saucelabs/saucectl-run-action@v3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          skip-run: true

      # There is discrepencies between uid used to clone and uid in container,
      # As a temporary measure, we chmod files to allow test outputs to be written.
      - name: Workaround for container permissions
        run: sudo chmod -R 777 tests/

      # Run e2e tests (Docker)
      - run: bash ./tests/run.sh
        env:
          SKIP_CI: true
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        name: Build Saucectl and run E2E tests

  build-and-test-local:
    runs-on: windows-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci --production
          npx playwright install
          npx playwright install-deps

      - name: Run basic-js
        run: |
          node . `
            --suiteName basic-js `
            --runCfgPath ./tests/fixtures/local/basic-js/sauce-runner.json
        env:
          SAUCE_VM: true

      - name: Run basic-ts
        run: |
          node . `
            --suiteName basic-ts `
            --runCfgPath ./tests/fixtures/local/basic-ts/sauce-runner.json
        env:
          SAUCE_VM: true

      - name: Run config-merging
        run: |
          node . `
            --suiteName config-merging `
            --runCfgPath ./tests/fixtures/local/config-merging/sauce-runner.json
        env:
          SAUCE_VM: true

  cucumber-build-and-test-local:
    runs-on: windows-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --production
          npm i @cucumber/cucumber
          npx playwright install
          npx playwright install-deps

      - name: Local Tests
        working-directory: tests/fixtures/local/cucumber/
        run: |
          npm i
          node ../../../../ --suiteName "cucumber local test" --runCfgPath ./sauce-runner.json
          node ../../../../ --suiteName "cucumber config test" --runCfgPath ./sauce-runner.json
        env:
          SAUCE_VM: true

  build-windows-bundle:
    runs-on: windows-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Google Cloud Login
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_RUNNER_SA_KEY }}'

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCS_RUNNER_PROJECT_ID }}
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}\python.exe

      - name: Update Release Version
        run: npm version --no-git-tag-version 1.0.0

      - name: Bundle Directory
        run: bash ./scripts/bundle.sh

      - name: Archive Bundle
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Compress-Archive bundle/ playwright-windows-amd64.zip
          azPSVersion: '3.1.0'

      - name: Upload to GCS
        run: |
          gsutil cp ./playwright-windows-amd64.zip gs://${{ secrets.GCS_RUNNER_BUCKET }}/playwright-windows-amd64-${{ github.run_id }}.zip

  build-macos-bundle:
    runs-on: macos-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Google Cloud Login
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_RUNNER_SA_KEY }}'

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCS_RUNNER_PROJECT_ID }}
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}/python

      - name: Update Release Version
        run: npm version --no-git-tag-version 1.0.0

      - name: Bundle Directory
        run: bash ./scripts/bundle.sh

      - name: Archive Bundle
        run: zip --symlinks -r playwright-macos-amd64.zip bundle/

      - name: Upload to GCS
        run: |
          gsutil cp ./playwright-macos-amd64.zip gs://${{ secrets.GCS_RUNNER_BUCKET }}/playwright-macos-amd64-${{ github.run_id }}.zip

  bundle-test:
    needs: [build-windows-bundle, build-macos-bundle]
    strategy:
      max-parallel: 3
      matrix:
        os: [Win10, Win11, macOS12, macOS13]
        browser: [Chromium, Firefox, Webkit]
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup saucectl
        run: npm install -g saucectl

      - name: Test on Sauce
        working-directory: ./tests/fixtures/cloud
        run: |
          BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-windows-amd64-${{ github.run_id }}.zip
          if [[ ${{ matrix.os }} =~ ^macOS ]];then
            BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-macos-amd64-${{ github.run_id }}.zip
          fi

          npx saucectl run \
            --runner-version "url: ${BUNDLE_URL}" \
            --config .sauce/config.yml \
            --select-suite "${{ matrix.os }} - ${{ matrix.browser }}"

  bundle-test-with-sauce-connect:
    needs: [build-windows-bundle, build-macos-bundle]
    strategy:
      max-parallel: 3
      matrix:
        os: [Win10, Win11, macOS12, macOS13]
        browser: [Chromium, Firefox, Webkit]
        exclude:
          - os: Win10
            browser: Webkit
          - os: Win11
            browser: Webkit
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup saucectl
        run: npm install -g saucectl

      - name: Run web-page
        run: |
          python -m http.server 8000 &
        working-directory: ./tests/fixtures/cloud/www/

      - name: Start sauce-connect
        uses: saucelabs/sauce-connect-action@v2
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: github-playwright-sc-check-tunnel-${{ matrix.os }}-${{ matrix.browser }}
          scVersion: 4.7.1

      - name: Test on Sauce
        working-directory: ./tests/fixtures/cloud
        run: |
          BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-windows-amd64-${{ github.run_id }}.zip
          if [[ ${{ matrix.os }} =~ ^macOS ]];then
            BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-macos-amd64-${{ github.run_id }}.zip
          fi

          npx saucectl run \
            --runner-version "url: ${BUNDLE_URL}" \
            --config .sauce/config-sc.yml \
            --tunnel-name github-playwright-sc-check-tunnel-${{ matrix.os }}-${{ matrix.browser }} \
            --select-suite "${{ matrix.os }} - ${{ matrix.browser }}"

  cucumber-bundle-test:
    needs: [build-windows-bundle, build-macos-bundle]
    strategy:
      fail-fast: false
      matrix:
        os: [win, mac]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install saucectl
        run: npm install -g saucectl

      - name: Test on Sauce
        working-directory: ./tests/fixtures/cloud/cucumber
        run: |
          npm ci --production

          BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-windows-amd64-${{ github.run_id }}.zip
          if [[ ${{ matrix.os }} = mac ]];then
            BUNDLE_URL=https://storage.googleapis.com/${{ secrets.GCS_RUNNER_BUCKET }}/playwright-macos-amd64-${{ github.run_id }}.zip
          fi

          npx saucectl run \
            --runner-version "url: ${BUNDLE_URL}" \
            --config .sauce/config_${{ matrix.os }}.yml
