name: Docker Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1      
      -
        name: Prepare
        id: prep
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo ::set-output name=version::${VERSION}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            saucelabs/stt-playwright-jest-node:latest
            saucelabs/stt-playwright-jest-node:${{ steps.prep.outputs.version }}
  # TODO: Re-enable this once we start making playwright bundles
  #release-windows-bundle:
    #runs-on: windows-latest
    #steps:
      #- name: Checkout
        #uses: actions/checkout@v2
      #- name: Use Node.js v12.x
        #uses: actions/setup-node@v1
        #with:
          #node-version: 12.x
      #- run: npm install
      #- name: Get release ID
        #id: get_release_id
        #run: |
          #echo "::set-output name=release_id::$(node ./.github/workflows/helpers/print-release-id.js)"
        #env:
          #GH_REF: ${{ github.ref }}
          #GH_REPO: ${{ github.repository }}
      #- name: Print release id
        #run: echo ${{ steps.get_release_id.outputs.release_id }}
      #- name: Bundle Directory
        #run: bash ./scripts/bundle.sh
      #- name: List bundle contents
        #run: ls -R bundle/
      #- name: Archive bundle
        #uses: azure/powershell@v1
        #with:
          #inlineScript: |
            #Compress-Archive bundle/ sauce-playwright-win.zip
          #azPSVersion: '3.1.0'
      #- name: Upload Release Asset
        #id: upload-release-asset 
        #uses: actions/upload-release-asset@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #upload_url: https://uploads.github.com/repos/saucelabs/sauce-playwright-runner/releases/${{ steps.get_release_id.outputs.release_id }}/assets?name=sauce-playwright-runner.zip
          #asset_path: ./sauce-playwright-win.zip
          #asset_name: sauce-playwright-win.zip
          #asset_content_type: application/zip
  release-template-bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm install
      - name: Prepare
        id: prep
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo ::set-output name=version::${VERSION}
      - name: Update Release version
        run: sed -i "s/##VERSION##/${{ steps.prep.outputs.version }}/g" .saucetpl/.sauce/config.yml
      - name: Archive template
        run: cd .saucetpl && tar -czf ../saucetpl.tar.gz .
      - name: Check if release exists
        id: check_release
        run: echo ::set-output name=success::$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.prep.outputs.version }})
      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.success != '200'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prep.outputs.version }}
          release_name: Release ${{ steps.prep.outputs.version }}
          body: Release ${{ steps.prep.outputs.version }}
          draft: false
      - name: Get release ID
        id: get_release_id
        run: |
          echo "::set-output name=release_id::$(node ./.github/workflows/helpers/print-release-id.js)"
        env:
          GH_REF: ${{ github.ref }}
          GH_REPO: ${{ github.repository }}
      - name: Upload Template Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets?name=saucetpl.tar.gz
          asset_path: ./saucetpl.tar.gz
          asset_name: saucetpl.tar.gz
          asset_content_type: application/tar+gzip
